; We want all programs to redirect to stderr by default, unless specifically
; configured otherwise.
[program:__defaults__]
redirect_stderr=true

; The supervisord and supervisorctl programs interact with each other via an
; XML-RPC control socket. This provides a great deal of flexibility and control
; over security, but you have to configure it just so or things won't work.
;
; For convenience during development, django-supervisor provides automatic
; control socket configuration. By default it binds the server to localhost on a
; fixed-but-randomish port, and sets up a username and password based on
; settings.SECRET_KEY.
;[unix_http_server]
;file=/tmp/supervisor.sock   ; (the path to the socket file)
;chmod=0700                 ; socket file mode (default 0700)
;chown=ddisrv:ddisrv         ; socket file uid:gid owner
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

;[inet_http_server]          ; inet (TCP) server disabled by default
;port=127.0.0.1:8101         ; (ip_address:port specifier, *:port for all iface)
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

; Django web interface and API
;[program:web]
;{% if settings.DEBUG %}
;command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py runserver 0.0.0.0:8100
;{% else %}
;command=uwsgi --ini {{ PROJECT_DIR }}/uwsgi.ini
;{% endif %}

; Celery cam snapshot process to capture TaskState information
[program:celerycam]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celerycam -l info

; Flower graphical heads up and monitor
[program:flower]
{% if settings.DEBUG %}
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celery flower --address=0.0.0.0 --broker-api="http://guest:guest@{{ settings.SERVER_IP }}:15672/api/" --persistent
{% else %}
; command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celery flower --address=0.0.0.0 --broker-api="http://guest:guest@localhost:15672/api/" --persistent
{% endif %}

; Worker processes that talks to XMLRPC server
[program:worker]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celery worker -l info
